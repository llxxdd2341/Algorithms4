package test11;

import java.util.Iterator;

public class RandomBag<Item> implements Iterable<Item> {
	int size;
	Item[] item = (Item[])new Object[size];
	public RandomBag() {
		size = 0;
	}
	public void add(Item item1) {
		if(size == 0)
			{
			Item[] temp = (Item[])new Object[1];
			item = temp;                                
		    item[size] = item1;
		    size++;
		    }
		else if(size == item.length)
			{
			resize(1+size);
		 	item[size] = item1;
		    size++;
		    }
		else
			{
		 	item[size] = item1;
		    size++;
		    }
	}
	private void resize(int s) {
		Item[] temp = (Item[])new Object[s];
		for(int i = 0;i<item.length;i++)
		{
			temp[i] = item[i];
		}
		item = temp;
	}
	public boolean isEmpty() {
		return size == 0 ;
	}
	public int size() {
		return size;
	}
	@Override
	public Iterator<Item> iterator() {
		// TODO Auto-generated method stub
		return new RandomBagIterator();
	}
	private class RandomBagIterator implements Iterator<Item>{
		         public RandomBagIterator(){
		             shuffle(item);//构造函数中随机排列下数组中的元素
		         }
		         private void shuffle(Item b[]){//数组的随机排序
		             int N=b.length;
		             for(int i=0;i<N;i++){
		                 int r=i+StdRandom.uniform(N-i);
		                 Item temp=b[i];
		                 b[i]=b[r];
		                 b[r]=temp;
		             }
		         }
		         @Override
		         public boolean hasNext() {
		             // TODO Auto-generated method stub
		             return size!=0;
		         }
	 
		         @Override
		         public Item next() {
		             // TODO Auto-generated method stub
		             return item[--size];
		         }
		 
		         @Override
		         public void remove() {
		             // TODO Auto-generated method stub
		             
		         }
		         
		     }

}
