package test11;

public class RandomQueue<Item> {
	int size;
	Item[] item = (Item[])new Object[size];
	public RandomQueue() {
		size = 0;
	}
	public boolean isEmpty() {
		return size == 0;
	}
	private void resize(int s) {
		Item[] temp = (Item[])new Object[s];
		if(s<size) {
			for(int i = 0;i<s;i++)
			{
				temp[i] = item[i];
			}
		}else {
			for(int i = 0;i<item.length;i++)
			{
				temp[i] = item[i];
			}
		}
		item = temp;
	}
	public void enqueue(Item item1) {
		if(size == 0)
			{
			Item[] temp = (Item[])new Object[1];
			item = temp;                                
		    item[size] = item1;
		    size++;
		    }
		else if(size == item.length)
			{
			resize(1+size);
		 	item[size] = item1;
		    size++;
		    }
		else
			{
		 	item[size] = item1;
		    size++;
		    }
	}
	public Item dequeue() {
		Item temp = null ;
		if(size>1) 
		{
			int i = StdRandom.uniform(size - 1);
			temp = item[i];
			item[i] = item[size-1];
			item[size-1] = temp;
		}else if(size == 1) {
			temp = item[0];
		}
		if(size>=1)
		{
			resize(size-1);
		}
		size--;
		return temp;
	}
	public Item sample() {
		Item temp ;
		int i = StdRandom.uniform(size - 1);
		temp = item[i];
		item[i] = item[size-1];
		item[size-1] = temp;
		return temp;
	}
}
